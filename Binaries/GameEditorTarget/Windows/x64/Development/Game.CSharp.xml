<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Game.CSharp</name>
    </assembly>
    <members>
        <member name="T:CameraTV">
            <summary>
            Simple script that renders the camera view to the texture and draws it with material on model.
            </summary>
            <seealso cref="T:FlaxEngine.Script" />
        </member>
        <member name="F:CameraTV.Cam">
            <summary>
            The camera to draw.
            </summary>
        </member>
        <member name="F:CameraTV.Material">
            <summary>
            The material to use for rendering. Needs to have texture parameter `Image`.
            </summary>
        </member>
        <member name="P:CameraTV.Resolution">
            <summary>
            The camera preview resolution.
            </summary>
        </member>
        <member name="F:CameraTV.ViewDistance">
            <summary>
            The max distance from player to the TV when rendering is enabled. Used to cull additional work if TV is far away from the player.
            </summary>
        </member>
        <member name="M:CameraTV.OnEnable">
            <inheritdoc />
        </member>
        <member name="M:CameraTV.OnUpdate">
            <inheritdoc />
        </member>
        <member name="M:CameraTV.OnDisable">
            <inheritdoc />
        </member>
        <member name="F:FTween.EaseFunc.PI">
            <summary>
            Constant Pi.
            </summary>
        </member>
        <member name="F:FTween.EaseFunc.HALFPI">
            <summary>
            Constant Pi / 2.
            </summary>
        </member>
        <member name="M:FTween.EaseFunc.Evaluate(System.Single,FTween.Ease,FTween.EaseDelegate)">
            <summary>
            Easing Functions enumeration
            </summary>
            <summary>
            Interpolate using the specified function.
            </summary>
        </member>
        <member name="M:FTween.EaseFunc.Linear(System.Single)">
            <summary>
            Modeled after the line y = x
            </summary>
        </member>
        <member name="M:FTween.EaseFunc.QuadraticEaseIn(System.Single)">
            <summary>
            Modeled after the parabola y = x^2
            </summary>
        </member>
        <member name="M:FTween.EaseFunc.QuadraticEaseOut(System.Single)">
            <summary>
            Modeled after the parabola y = -x^2 + 2x
            </summary>
        </member>
        <member name="M:FTween.EaseFunc.QuadraticEaseInOut(System.Single)">
            <summary>
            Modeled after the piecewise quadratic
            y = (1/2)((2x)^2)             ; [0, 0.5)
            y = -(1/2)((2x-1)*(2x-3) - 1) ; [0.5, 1]
            </summary>
        </member>
        <member name="M:FTween.EaseFunc.CubicEaseIn(System.Single)">
            <summary>
            Modeled after the cubic y = x^3
            </summary>
        </member>
        <member name="M:FTween.EaseFunc.CubicEaseOut(System.Single)">
            <summary>
            Modeled after the cubic y = (x - 1)^3 + 1
            </summary>
        </member>
        <member name="M:FTween.EaseFunc.CubicEaseInOut(System.Single)">
            <summary>	
            Modeled after the piecewise cubic
            y = (1/2)((2x)^3)       ; [0, 0.5)
            y = (1/2)((2x-2)^3 + 2) ; [0.5, 1]
            </summary>
        </member>
        <member name="M:FTween.EaseFunc.QuarticEaseIn(System.Single)">
            <summary>
            Modeled after the quartic x^4
            </summary>
        </member>
        <member name="M:FTween.EaseFunc.QuarticEaseOut(System.Single)">
            <summary>
            Modeled after the quartic y = 1 - (x - 1)^4
            </summary>
        </member>
        <member name="M:FTween.EaseFunc.QuarticEaseInOut(System.Single)">
            <summary>
            Modeled after the piecewise quartic
            y = (1/2)((2x)^4)        ; [0, 0.5)
            y = -(1/2)((2x-2)^4 - 2) ; [0.5, 1]
            </summary>
        </member>
        <member name="M:FTween.EaseFunc.QuinticEaseIn(System.Single)">
            <summary>
            Modeled after the quintic y = x^5
            </summary>
        </member>
        <member name="M:FTween.EaseFunc.QuinticEaseOut(System.Single)">
            <summary>
            Modeled after the quintic y = (x - 1)^5 + 1
            </summary>
        </member>
        <member name="M:FTween.EaseFunc.QuinticEaseInOut(System.Single)">
            <summary>
            Modeled after the piecewise quintic
            y = (1/2)((2x)^5)       ; [0, 0.5)
            y = (1/2)((2x-2)^5 + 2) ; [0.5, 1]
            </summary>
        </member>
        <member name="M:FTween.EaseFunc.SineEaseIn(System.Single)">
            <summary>
            Modeled after quarter-cycle of sine wave
            </summary>
        </member>
        <member name="M:FTween.EaseFunc.SineEaseOut(System.Single)">
            <summary>
            Modeled after quarter-cycle of sine wave (different phase)
            </summary>
        </member>
        <member name="M:FTween.EaseFunc.SineEaseInOut(System.Single)">
            <summary>
            Modeled after half sine wave
            </summary>
        </member>
        <member name="M:FTween.EaseFunc.CircularEaseIn(System.Single)">
            <summary>
            Modeled after shifted quadrant IV of unit circle
            </summary>
        </member>
        <member name="M:FTween.EaseFunc.CircularEaseOut(System.Single)">
            <summary>
            Modeled after shifted quadrant II of unit circle
            </summary>
        </member>
        <member name="M:FTween.EaseFunc.CircularEaseInOut(System.Single)">
            <summary>	
            Modeled after the piecewise circular function
            y = (1/2)(1 - Math.Sqrt(1 - 4x^2))           ; [0, 0.5)
            y = (1/2)(Math.Sqrt(-(2x - 3)*(2x - 1)) + 1) ; [0.5, 1]
            </summary>
        </member>
        <member name="M:FTween.EaseFunc.ExponentialEaseIn(System.Single)">
            <summary>
            Modeled after the exponential function y = 2^(10(x - 1))
            </summary>
        </member>
        <member name="M:FTween.EaseFunc.ExponentialEaseOut(System.Single)">
            <summary>
            Modeled after the exponential function y = -2^(-10x) + 1
            </summary>
        </member>
        <member name="M:FTween.EaseFunc.ExponentialEaseInOut(System.Single)">
            <summary>
            Modeled after the piecewise exponential
            y = (1/2)2^(10(2x - 1))         ; [0,0.5)
            y = -(1/2)*2^(-10(2x - 1))) + 1 ; [0.5,1]
            </summary>
        </member>
        <member name="M:FTween.EaseFunc.ElasticEaseIn(System.Single)">
            <summary>
            Modeled after the damped sine wave y = sin(13pi/2*x)*Math.Pow(2, 10 * (x - 1))
            </summary>
        </member>
        <member name="M:FTween.EaseFunc.ElasticEaseOut(System.Single)">
            <summary>
            Modeled after the damped sine wave y = sin(-13pi/2*(x + 1))*Math.Pow(2, -10x) + 1
            </summary>
        </member>
        <member name="M:FTween.EaseFunc.ElasticEaseInOut(System.Single)">
            <summary>
            Modeled after the piecewise exponentially-damped sine wave:
            y = (1/2)*sin(13pi/2*(2*x))*Math.Pow(2, 10 * ((2*x) - 1))      ; [0,0.5)
            y = (1/2)*(sin(-13pi/2*((2x-1)+1))*Math.Pow(2,-10(2*x-1)) + 2) ; [0.5, 1]
            </summary>
        </member>
        <member name="M:FTween.EaseFunc.BackEaseIn(System.Single)">
            <summary>
            Modeled after the overshooting cubic y = x^3-x*sin(x*pi)
            </summary>
        </member>
        <member name="M:FTween.EaseFunc.BackEaseOut(System.Single)">
            <summary>
            Modeled after overshooting cubic y = 1-((1-x)^3-(1-x)*sin((1-x)*pi))
            </summary>	
        </member>
        <member name="M:FTween.EaseFunc.BackEaseInOut(System.Single)">
            <summary>
            Modeled after the piecewise overshooting cubic function:
            y = (1/2)*((2x)^3-(2x)*sin(2*x*pi))           ; [0, 0.5)
            y = (1/2)*(1-((1-x)^3-(1-x)*sin((1-x)*pi))+1) ; [0.5, 1]
            </summary>
        </member>
        <member name="M:FTween.EaseFunc.BounceEaseIn(System.Single)">
            <summary>
            </summary>
        </member>
        <member name="M:FTween.EaseFunc.BounceEaseOut(System.Single)">
            <summary>
            </summary>
        </member>
        <member name="M:FTween.EaseFunc.BounceEaseInOut(System.Single)">
            <summary>
            </summary>
        </member>
        <member name="T:Game.CameraControl">
            <summary>
            CameraControl Script.
            </summary>
        </member>
        <member name="M:Game.CameraControl.UpdateCameraControl">
            <summary>
            Updates the camera's position and handles zoom input.
            </summary>
        </member>
        <member name="M:Game.CameraControl.PrepareCameraOnStart">
            <summary>
            Sets up camera's initial position and orientation.
            </summary>
            <remarks>
            Sets camera position to the player's position, adds the specified offset to it,
            sets the camera's Euler angles to the specified orientation, and makes the camera look at the player.
            </remarks>
        </member>
        <member name="M:Game.CameraControl.PrepareZoom">
            <summary>
            Prepares camera for zooming.
            </summary>
            <remarks>
            Sets camera position to the maximum target distance, sets the start and end camera positions
            for the zoom tween, and calculates the current target distance to the player.
            </remarks>
        </member>
        <member name="M:Game.CameraControl.ZoomUp">
            <summary>
            Zooms the camera up by the specified amount
            </summary>
        </member>
        <member name="M:Game.CameraControl.ZoomDown">
            <summary>
            Zooms the camera down by the specified amount
            </summary>
        </member>
        <member name="T:Game.TChest">
            <summary>
            Chest Script.
            </summary>
        </member>
        <member name="T:Game.Sokoban.GameControl">
            <summary>
            GameControl Script.
            </summary>
        </member>
        <member name="M:Game.Sokoban.GameControl.OnStart">
            <inheritdoc/>
            
        </member>
        <member name="T:Game.Sokoban.GLOBAL">
            <summary>
            GLOBAL Script.
            </summary>
        </member>
        <member name="T:Game.Sokoban.LevelBuilder">
            <summary>
            LevelBuilder Script.
            </summary>
        </member>
        <member name="M:Game.Sokoban.LevelBuilder.OnStart">
            <inheritdoc/>
        </member>
        <member name="M:Game.Sokoban.LevelBuilder.OnEnable">
            <inheritdoc/>
        </member>
        <member name="M:Game.Sokoban.LevelBuilder.OnDisable">
            <inheritdoc/>
        </member>
        <member name="M:Game.Sokoban.LevelBuilder.OnUpdate">
            <inheritdoc/>
        </member>
        <member name="T:Game.HUD">
            <summary>
            HUD Script.
            </summary>
        </member>
        <member name="M:Game.HUD.OnStart">
            <inheritdoc/>
        </member>
        <member name="M:Game.HUD.OnEnable">
            <inheritdoc/>
        </member>
        <member name="M:Game.HUD.OnDisable">
            <inheritdoc/>
        </member>
        <member name="M:Game.HUD.OnUpdate">
            <inheritdoc/>
        </member>
        <member name="T:Game.LevelDefinition">
            <summary>
            LevelDefinition Script.
            </summary>
        </member>
        <member name="M:Game.LevelDefinition.OnStart">
            <inheritdoc/>
        </member>
        <member name="M:Game.LevelDefinition.OnEnable">
            <inheritdoc/>
        </member>
        <member name="M:Game.LevelDefinition.OnDisable">
            <inheritdoc/>
        </member>
        <member name="M:Game.LevelDefinition.OnUpdate">
            <inheritdoc/>
        </member>
        <member name="T:Game.PlayerControl">
            <summary>
            PlayerControl Script.
            </summary>
        </member>
        <member name="M:Game.PlayerControl.OnStart">
            <inheritdoc/>
        </member>
        <member name="T:Game.TPlace">
            <summary>
            TPlace Script.
            </summary>
        </member>
    </members>
</doc>
